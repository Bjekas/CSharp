<Page x:Class="PLCGuard.Pages.Page_AddPLC"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d"
      d:DesignHeight="281" d:DesignWidth="540"
	Title="Add PLC unit">

    <Page.Resources>
        <Style x:Key="AddButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF5AB945"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF218D09"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF218D09"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF218D09"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFF78484"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF8D0909"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF8D0909"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF8D0909"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EditButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFEEFF80"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF8C9912"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF8C9912"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF8C9912"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    
    <Grid Loaded="Grid_Loaded">
        <Label x:Name="LPLC" Content="PLC" HorizontalAlignment="Left" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LPLCName" Content="Name" HorizontalAlignment="Left" Margin="0,28,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LIPAddr" Content="IP Address" HorizontalAlignment="Left" Margin="0,56,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LSlotN" Content="Slot Number" HorizontalAlignment="Left" Margin="0,84,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LBeacon" Content="Beacon" HorizontalAlignment="Left" Margin="270,0,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LBeaconRTime" Content="Refresh Time" HorizontalAlignment="Left" Margin="270,28,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LBeaconSample" Content="Number of samples" HorizontalAlignment="Left" Margin="270,56,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LBeaconDB" Content="DB number" HorizontalAlignment="Left" Margin="270,84,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LBeaconByte" Content="Byte number" HorizontalAlignment="Left" Margin="270,112,0,0" VerticalAlignment="Top" Width="106"/>
        <Label x:Name="LBeaconBit" Content="Bit number" HorizontalAlignment="Left" Margin="270,140,0,0" VerticalAlignment="Top" Width="106"/>
        <TextBox x:Name="TBName" HorizontalAlignment="Left" Height="23" Margin="111,28,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBName_TextChanged"/>
        <TextBox x:Name="TBIpAddr" HorizontalAlignment="Left" Height="23" Margin="111,56,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBIpAddr_TextChanged"/>
        <TextBox x:Name="TBSlotN" HorizontalAlignment="Left" Height="23" Margin="111,84,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBSlotN_TextChanged"/>
        <TextBox x:Name="TBBeaconTime" HorizontalAlignment="Left" Height="23" Margin="381,28,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBBeaconTime_TextChanged"/>
        <TextBox x:Name="TBBeaconSamples" HorizontalAlignment="Left" Height="23" Margin="381,56,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBBeaconSamples_TextChanged"/>
        <TextBox x:Name="TBBeaconDB" HorizontalAlignment="Left" Height="23" Margin="381,84,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBBeaconDB_TextChanged"/>
        <TextBox x:Name="TBBeaconByte" HorizontalAlignment="Left" Height="23" Margin="381,112,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBBeaconByte_TextChanged"/>
        <TextBox x:Name="TBBeaconBit" HorizontalAlignment="Left" Height="23" Margin="381,140,0,0"  VerticalAlignment="Top" Width="120" TextChanged="TBBeaconBit_TextChanged"/>        
        
        <Image x:Name="INameCheck" HorizontalAlignment="Left" Height="23" Margin="236,28,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="IIpAddrCheck" HorizontalAlignment="Left" Height="23" Margin="236,56,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="ISlotNCheck" HorizontalAlignment="Left" Height="23" Margin="236,84,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="IRefreshCheck" HorizontalAlignment="Left" Height="23" Margin="506,28,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="ISamplesNCheck" HorizontalAlignment="Left" Height="23" Margin="506,56,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="IDBNCheck" HorizontalAlignment="Left" Height="23" Margin="506,84,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="IByteNCheck" HorizontalAlignment="Left" Height="23" Margin="506,112,0,0" VerticalAlignment="Top" Width="23"/>
        <Image x:Name="IBitNCheck" HorizontalAlignment="Left" Height="23" Margin="506,140,0,0" VerticalAlignment="Top" Width="23"/>

        <Button x:Name="BCancel" Content="Cancel" Margin="10,186,0,0" RenderTransformOrigin="1.549,0.55" HorizontalAlignment="Left" Width="91" Height="23" VerticalAlignment="Top" Click="BCancel_Click" Style="{DynamicResource DeleteButton}"/>
        <Button x:Name="BSave" Content="Save" Margin="410,183,0,0" RenderTransformOrigin="1.549,0.55" Click="BAdd_Click" HorizontalAlignment="Left" Width="91" Height="23" VerticalAlignment="Top" Style="{DynamicResource AddButton}"/>
        <Button x:Name="BClear" Content="Reset" Margin="212,186,0,0" RenderTransformOrigin="1.549,0.55" HorizontalAlignment="Left" Width="91" Height="23" VerticalAlignment="Top" Click="BClear_Click" Style="{DynamicResource EditButton}"/>
        
    </Grid>
</Page>
